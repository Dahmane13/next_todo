import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "../utils/api";
import GeustLayout from "../layoutes/GeustLayout";

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Welcome</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <GeustLayout>
        <div className=" absolute top-48 left-0 right-0 mx-auto flex w-fit flex-col items-center gap-6 text-white">
          <h1 className=" text-7xl">Task,just tasks.</h1>
          <p className=" w-[55%] text-center text-lg">
            Keep track of the daily tasks in the life and get the satisfaction
            upon completion
          </p>
          <div className=" flex items-center gap-8">
            <Link
              className="button primaryGrad flex h-10 w-40 cursor-pointer select-none items-center justify-center rounded-lg
    border-b-[1px] border-[#F47AA4]
    transition-all
    duration-150 [box-shadow:0_8px_0_0_#EE55A2,0_13px_0_0_#EE55A241] active:translate-y-2
    active:border-b-[0px] active:[box-shadow:0_0px_0_0_#EE55A2,0_0px_0_0_#EE55A241]
  "
              href="todo"
            >
              Get started
            </Link>

            <span className=" cursor-pointer text-lg hover:underline">
              Learn more
            </span>
          </div>
        </div>
      </GeustLayout>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
